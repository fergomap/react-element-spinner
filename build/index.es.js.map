{"version":3,"file":"index.es.js","sources":["../src/components/spinner/config/spinner.config.tsx","../src/components/spinner/services/spinner.service.tsx","../src/components/spinner/spinner.component.tsx"],"sourcesContent":["interface SpinnerConfig {\r\n    DEFAULT_COLORS: {\r\n        BLUE: string;\r\n        WHITE: string;\r\n        BACKGROUND: string;\r\n        SECONDARY: string;\r\n    };\r\n    FONT_SIZE: {\r\n        CIRCLE_DOTS: number;\r\n        CIRCLE_DOTS_COLLAPSE: number;\r\n    };\r\n    ASPECT_RATIO: {\r\n        CENTERED_DEFAULT: number;\r\n        CENTERED_NOT_DEFAULT: number;\r\n        CIRCLE_DOTS: number;\r\n        CIRCLE_DOTS_COLLAPSE: number;\r\n    };\r\n}\r\n\r\nexport const SPINNER_CONSTANTS: SpinnerConfig = {\r\n    DEFAULT_COLORS: {\r\n        BLUE: '#3578e5',\r\n        WHITE: '#ffffff',\r\n        BACKGROUND: '#d3d3d3',\r\n        SECONDARY: '#f3f3f3'\r\n    },\r\n    FONT_SIZE: {\r\n        CIRCLE_DOTS: 10,\r\n        CIRCLE_DOTS_COLLAPSE: 90\r\n    },\r\n    ASPECT_RATIO: {\r\n        CENTERED_DEFAULT: 5,\r\n        CENTERED_NOT_DEFAULT: 2,\r\n        CIRCLE_DOTS: 0.15,\r\n        CIRCLE_DOTS_COLLAPSE: 0.7\r\n    }\r\n};\r\n","import {SPINNER_CONSTANTS} from \"../config/spinner.config\";\r\n\r\nexport const getSpinnerFontSizeAspectRatio = (spinnerType?: 'default' | 'circle-dots' | 'circle-dots-collapse'): number => {\r\n    switch (spinnerType) {\r\n        case 'circle-dots':\r\n            return SPINNER_CONSTANTS.ASPECT_RATIO.CIRCLE_DOTS;\r\n        case 'circle-dots-collapse':\r\n            return SPINNER_CONSTANTS.ASPECT_RATIO.CIRCLE_DOTS_COLLAPSE;\r\n        default:\r\n            return 0;\r\n    }\r\n};\r\n\r\nexport const getCenteredSpinnerFontSize = (referenceSize: number, spinnerType?: 'default' | 'circle-dots' | 'circle-dots-collapse'): number => {\r\n    switch (spinnerType) {\r\n        case 'circle-dots':\r\n            return referenceSize > SPINNER_CONSTANTS.FONT_SIZE.CIRCLE_DOTS ? SPINNER_CONSTANTS.FONT_SIZE.CIRCLE_DOTS : referenceSize;\r\n        case 'circle-dots-collapse':\r\n            return referenceSize > SPINNER_CONSTANTS.FONT_SIZE.CIRCLE_DOTS_COLLAPSE ? SPINNER_CONSTANTS.FONT_SIZE.CIRCLE_DOTS_COLLAPSE : referenceSize;\r\n        default:\r\n            return 0;\r\n    }\r\n};\r\n\r\nexport const isDefaultSpinner = (spinnerType?: 'default' | 'circle-dots' | 'circle-dots-collapse'): boolean => {\r\n    return !spinnerType || spinnerType === 'default';\r\n};\r\n\r\nexport const parsePixelsToNumber = (pixels: string): number => {\r\n    return parseInt(pixels.replace('px', ''));\r\n};\r\n","import React, {ReactElement} from 'react';\r\nimport './spinner.component.scss';\r\nimport SpinnerComponentProps from './model/spinner.component.props';\r\nimport {SPINNER_CONSTANTS} from './config/spinner.config';\r\nimport {getCenteredSpinnerFontSize, getSpinnerFontSizeAspectRatio, isDefaultSpinner, parsePixelsToNumber} from './services/spinner.service';\r\n\r\nclass SpinnerComponent extends React.Component<SpinnerComponentProps, {}> {\r\n\r\n    private ref: any = React.createRef();\r\n\r\n    constructor(props: Readonly<SpinnerComponentProps>) {\r\n        super(props);\r\n\r\n        this.setUpSpinner = this.setUpSpinner.bind(this);\r\n        this.getContent = this.getContent.bind(this);\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.setUpSpinner();\r\n        if (this.props.resize && this.props.position === 'centered') {\r\n            window.addEventListener('resize', this.setUpSpinner);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(): void {\r\n        this.setUpSpinner();\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        if (this.props.resize && this.props.position === 'centered') {\r\n            window.removeEventListener('resize', this.setUpSpinner);\r\n        }\r\n    }\r\n\r\n    setUpSpinner(): void {\r\n        this.ref.current.parentNode.disabled = this.props.loading;\r\n        const parentComputedStyle = window.getComputedStyle(this.ref.current.parentNode);\r\n\r\n        if (this.props.position === 'centered') {\r\n            const borderWidth = parsePixelsToNumber(parentComputedStyle.getPropertyValue('border-bottom-width'));\r\n            const referenceSize = this.ref.current.parentNode.clientHeight > this.ref.current.parentNode.clientWidth ? this.ref.current.parentNode.clientWidth : this.ref.current.parentNode.clientHeight;\r\n\r\n            if (isDefaultSpinner(this.props.spinnerType)) {\r\n                const size = referenceSize / SPINNER_CONSTANTS.ASPECT_RATIO.CENTERED_DEFAULT + 'px';\r\n                this.ref.current.firstChild.style.width = size;\r\n                this.ref.current.firstChild.style.height = size;\r\n            } else {\r\n                this.ref.current.firstChild.style.fontSize = getCenteredSpinnerFontSize(referenceSize / SPINNER_CONSTANTS.ASPECT_RATIO.CENTERED_NOT_DEFAULT, this.props.spinnerType) + 'px';\r\n            }\r\n\r\n            this.ref.current.style.marginTop = '-' + parentComputedStyle.getPropertyValue('padding-top');\r\n            this.ref.current.style.marginLeft = '-' + parentComputedStyle.getPropertyValue('padding-left');\r\n            this.ref.current.style.width = (this.ref.current.parentNode.clientWidth + borderWidth) + 'px';\r\n            this.ref.current.style.height = (this.ref.current.parentNode.clientHeight + borderWidth) + 'px';\r\n        } else if (this.props.position === 'inline' && !this.props.customSpinner) {\r\n            const fontSize = parentComputedStyle.getPropertyValue('font-size');\r\n            const fontSizeNumber = parsePixelsToNumber(fontSize);\r\n            this.ref.current.style.marginLeft = '5px';\r\n            this.ref.current.style.width = fontSize;\r\n            this.ref.current.style.minWidth = fontSize;\r\n            this.ref.current.style.height = fontSize;\r\n            this.ref.current.style.minHeight = fontSize;\r\n            this.ref.current.firstChild.style.fontSize = fontSizeNumber * getSpinnerFontSizeAspectRatio(this.props.spinnerType) + 'px';\r\n        }\r\n    }\r\n\r\n    getContent(): ReactElement {\r\n        if (this.props.customSpinner) {\r\n            return this.props.customSpinner;\r\n        } else {\r\n            const contentStyle = isDefaultSpinner(this.props.spinnerType) ?\r\n                { border: 'solid 3px ' + (this.props.secondaryColor || SPINNER_CONSTANTS.DEFAULT_COLORS.SECONDARY), borderTop: 'solid 3px ' + (this.props.color || SPINNER_CONSTANTS.DEFAULT_COLORS.BLUE) } :\r\n                { color: this.props.color || SPINNER_CONSTANTS.DEFAULT_COLORS.WHITE };\r\n            return <div className={`loader ${this.props.spinnerType || 'default'}`} style={contentStyle}/>;\r\n        }\r\n    }\r\n\r\n    render(): ReactElement {\r\n        const background = this.props.position !== 'inline' && <div className=\"background\" style={{backgroundColor: this.props.backgroundColor || SPINNER_CONSTANTS.DEFAULT_COLORS.BACKGROUND}}/>;\r\n\r\n        return <div ref={this.ref} className={`loader-container ${this.props.loading ? '' : 'hidden'} ${this.props.position}`}>\r\n                { this.getContent() }\r\n                { background }\r\n            </div>;\r\n    }\r\n}\r\n\r\nexport default SpinnerComponent;\r\n"],"names":[],"mappings":"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"}